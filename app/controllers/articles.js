// Generated by CoffeeScript 1.6.2
var Article, mongoose, _;

mongoose = require('mongoose');

_ = require('underscore');

Article = mongoose.model('Article');

exports["new"] = function(req, res) {
  res.render('articles/new', {
    article: new Article({})
  });
};

exports.create = function(req, res) {
  var article;

  article = new Article(req.body);
  article.save(function(err) {
    if (err) {
      res.render('articles/new', {
        errors: err.errors,
        article: article
      });
    }
    res.redirect('/articles');
  });
};

exports.show = function(req, res) {
  return void 0;
};

exports.edit = function(req, res) {
  var article;

  article = req.article;
  res.render('articles/edit', {
    article: article
  });
};

exports.update = function(req, res) {
  var article;

  article = req.article;
  article = _.extend(article, req.body);
  article.save(function(err) {
    if (err) {
      res.render('articles/edit', {
        article: article,
        errors: err.errors
      });
    } else {
      req.flash('notice', article.title + ' was successfully updated.');
      res.redirect('/articles');
    }
  });
};

exports.destroy = function(req, res) {
  var article;

  article = req.article;
  return article.remove(function(err) {
    req.flash('notice', article.title + ' was successfully deleted.');
    return res.redirect('/articles');
  });
};

exports.manage = function(req, res) {
  return Article.list(function(err, articles) {
    res.render('articles/manage', {
      articles: articles,
      message: req.flash('notice')
    });
  });
};

exports.index = function(req, res) {
  Article.list(function(err, articles) {
    return res.render('articles/index', {
      articles: articles
    });
  });
};

exports.article = function(req, res, next, id) {
  Article.findById(id).exec(function(err, article) {
    if (err) {
      return next(err);
    }
    if (!article) {
      return next(new Error('Failed to load article'));
    }
    req.article = article;
    next();
  });
};

// Generated by CoffeeScript 1.6.2
var Book, mongoose, _;

mongoose = require('mongoose');

_ = require('underscore');

Book = mongoose.model('Book');

exports["new"] = function(req, res) {
  res.render('books/new', {
    book: new Book({})
  });
};

exports.create = function(req, res) {
  var book;

  book = new Book(req.body);
  book.save(function(err) {
    if (err) {
      res.render('books/new', {
        errors: err.errors,
        book: book
      });
    }
    res.redirect('/books');
  });
};

exports.show = function(req, res) {
  return void 0;
};

exports.edit = function(req, res) {
  var book;

  book = req.book;
  res.render('books/edit', {
    book: book
  });
};

exports.update = function(req, res) {
  var book;

  book = req.book;
  book = _.extend(book, req.body);
  book.save(function(err) {
    if (err) {
      res.render('books/edit', {
        book: book,
        errors: err.errors
      });
    } else {
      req.flash('notice', book.title + ' was successfully updated.');
      res.redirect('/books');
    }
  });
};

exports.destroy = function(req, res) {
  var book;

  book = req.book;
  return book.remove(function(err) {
    req.flash('notice', book.title + ' was successfully deleted.');
    return res.redirect('/books');
  });
};

exports.manage = function(req, res) {
  return Book.list(function(err, books) {
    res.render('books/manage', {
      books: books,
      message: req.flash('notice')
    });
  });
};

exports.index = function(req, res) {
  Book.list(function(err, books) {
    return res.render('books/index', {
      books: books
    });
  });
};

exports["import"] = function(req, res) {
  Book.list(function(err, books) {
    return res.render('books/import', {
      books: books
    });
  });
};

exports.book = function(req, res, next, id) {
  Book.findById(id).exec(function(err, book) {
    if (err) {
      return next(err);
    }
    if (!book) {
      return next(new Error('Failed to load book'));
    }
    req.book = book;
    next();
  });
};
